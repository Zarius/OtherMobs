<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="OtherMobs" basedir="." default="build">
	<property name="lib" location="lib"/>
	<property name="src" location="src"/>
	<property name="rsrc" location="rsrc"/>

	<!--
	Include Ant-Contrib tasks
	See: http://ant-contrib.sourceforge.net/tasks/tasks/
	-->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${lib}/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<loadfile srcFile="${rsrc}/plugin.yml" property="project.version">
		<filterchain>
			<linecontainsregexp>
				<regexp pattern="^version:\s*.*$"/>
			</linecontainsregexp>
			<tokenfilter>
				<replaceregex pattern="^version:\s*(.*)$" replace="\1"/>
			</tokenfilter>
			<striplinebreaks/>
		</filterchain>
	</loadfile>

	<property name="output-jar" value="${ant.project.name}.jar"/> 

	<property name="debuglevel" value="source,lines"/>

	<!-- These custom settings work if you set them to run before any other build targets -->
	<target name="celtic">
		<property name="dependencies" value="../lib"/>
 		<property name="lib.bukkit" location="${dependencies}/bukkit.jar"/>
	    <property name="export-dir" value="../../plugins/"/>
		<property name="economy-dir" value="${dependencies}/economy"/>
		<property name="iConomy" value="iConomy"/>
	</target>

	<target name="zarius">
		<property name="dependencies" value="dependencies"/>
        <property name="lib.bukkit" location="lib/bukkit.jar"/>
	    <property name="export-dir" value="/home/zarius/Games/Minecraft/Servers/Ifami/Testing/plugins/"/>
	</target>

	<!-- Default setting (if custom setting above not set) -->
	<target name="default">
	    <property name="lib.bukkit" location="lib/bukkit.jar"/>
		<property name="dependencies" value="dependencies"/>
		<property name="economy-dir" value="${dependencies}/EconomyRegister"/>
		<property name="iConomy" value="iCo"/>
	</target>

	<target name="init" depends="default">
		<echo message="Building ${ant.project.name} ${othermobs.version} against Bukkit ${lib.bukkit.version}..."/>
		<mkdir dir="bin"/>
		<!--<copy file="${src}/plugin.yml" todir="bin" />-->

		<property name="logblock-location" value="${dependencies}/LogBlock.jar"/>
		<property name="mobarena-location" value="${dependencies}/MobArena.jar"/> 
		<property name="worldguard-location" value="${dependencies}/WorldGuard.jar"/>
		<property name="worldedit-location" value="${dependencies}/WorldEdit.jar"/>
        <property name="hawkeye-location" value="${dependencies}/HawkEye.jar"/>
        <property name="spout-location" value="${dependencies}/SpoutPluginAPI.jar"/>

		<path id="classpath">
			<pathelement location="bin"/>
            <pathelement location="lib/craftbukkit.jar"/>
			<pathelement location="${lib.bukkit}"/>
			<pathelement location="${logblock-location}"/>
			<pathelement location="${mobarena-location}"/>
			<pathelement location="${worldguard-location}"/>
			<pathelement location="${worldedit-location}"/>
		    <pathelement location="${hawkeye-location}"/>
		    <pathelement location="${spout-location}"/>
		</path>
	</target>

	<target name="clean">
		<delete dir="bin"/>
		<delete file="${output-jar}"/>
	</target>

	<target name="build" depends="init">
		<echo message="${ant.project.name}: ${ant.file}"/>
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeAntRuntime="no">
			<src path="${src}"/>
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="jar" depends="build">
		<jar destfile="${output-jar}">
			<fileset dir="bin/" excludes="**/odspecials/*.class"/>
			<fileset dir="rsrc/" includes="plugin.yml"/>
		</jar>
	</target>

	<target name="dist" depends="clean,build,jar">
		<property name="zipfile" value="builds/${ant.project.name}_${project.version}.zip"/>
		<zip destfile="${zipfile}" basedir="." includes="${output-jar} ${ant.project.name}/"/>
	</target>

	<!-- "export-dir" parameter needs to be defined in a custom settings build target -->
	<target name="test" depends="jar" if="export-dir">
   		<copy file="${output-jar}" todir="${export-dir}"/>
	</target>

</project>
